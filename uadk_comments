sched:

sec/hpre里把sched用起来？
sample调度器，poll_policy config入参没有必要

sec:

重复代码多，需要重构
digest测试性能存在问题，需要 1. 解开算法层锁，2，分析smmu引入的问题。 -- 重点问题

hpre:

使用HAVE_OPENSSL改造测试代码

zip:

公共：

openssl engine + 算法库 + 驱动库出错
一次编译出所有动态库和静态库
sec/hpre缺乏和SVA相关的测试用例(e.g. DVM, 预缺页, 大页...)
所有算法层的异步msg pool都是为每个ctx都分配了，没有区分同步异步
comp的poll_ctx没有加锁

下一步：

1. 性能测试，并发测试，长时间测试
2. 增加sched类型。配置参数搞成配置文件
...

性能测试case:

1. uadk接口
===========

    同异步       线程数      队列数      内存模型      调度模型

    
    同步         单线程      1           顺序/预缺页   RR


    同步         多线程      1           顺序/预缺页   RR


    同步         单线程      多          顺序/预缺页   RR
    

    同步         多线程      多          顺序/预缺页   RR


    异步         单线程      1           顺序/预缺页   RR


    异步         多线程      1           顺序/预缺页   RR


    异步         单线程      多          顺序/预缺页   RR
    

    异步         多线程      多          顺序/预缺页   RR


    NOTE: 1. 异步情况下都是一个poll线程。

          2. 顺序的内存模型是以一片连续的大buffer为基础反复循环使用。多线程情况
	     下，各自线程用各自的大buffer。

          3. 预缺页的模型是在顺序的内存模型基础上，做提前缺页，然后测试。

          4. 在顺序和域缺页的情况下，分别做长时间的性能测试，测试10s内平均吞吐量，
	     绘制10小时内性能抖动情况。分别在开swap、关swap的系统上做测试。

	  5. 在加入内存池的情况下重复测试全部性能数据, 内存池分别用大页和pin内存
	     的方式得到。

2. openssl engine接口
=====================

   如上配置，在有无内存池的情况下分别测试，openssl speed的性能，openssl + nginx
   性能。

